// em()
// Convert pixel values to ems.
// $target    - Value to convert to ems.
// $context   - The context the conversion is based on. Defaults to `$base-font-size`
@function em($target, $context: $base-font-size) {
  @if (unitless($target)) {$target: $target * 1px;}
  @if (unitless($context)) {$context: $context * 1px;}

  @return $target / $context * 1em;
}
// rem()
// Convert pixel values to rems.
// $target    - Value to convert to ems.
// $context   - The context the conversion is based on. Defaults to `$base-font-size`
@function rem($target, $context: $font-size--base) {
  @if (unitless($target)) {$target: $target * 1px;}
  @if (unitless($context)) {$context: $context * 1px;}

  @return $target / $context * 1rem;
}

// px()
//
// Convery em values to pixels.
//
// $target    - Value to convert to ems.
// $context   - The context the conversion is based on. Defaults to `$base-font-size`
// @requires  - `$base-font-size` / `@strip-units`
// @returns   - number
// @source    - http://www.pjmccormick.com/sweet-sass-function-convert-px-em

@function px($target, $context: $base-font-size) {
  @if not unitless($target) {
    $pxval: strip-units($target);
  }
  @if not unitless($context) {
    $base: strip-units($context);
  }
  @if $target == 0 { @return 0 }
  @return $target * $context + 0px;
}